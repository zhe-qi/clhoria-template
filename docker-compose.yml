services:
  # PostgreSQL 17 数据库
  postgres:
    image: postgres:17
    container_name: hono-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --locale=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: [CMD-SHELL, "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: hono-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: [CMD, redis-cli, ping]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # 数据库迁移容器（一次性运行）
  migrate:
    image: node:24-alpine
    container_name: hono-migrate
    working_dir: /app
    volumes:
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./drizzle.config.ts:/app/drizzle.config.ts
      - ./tsconfig.json:/app/tsconfig.json
      - ./migrations:/app/migrations
      - ./src/db:/app/src/db
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/postgres}
    command: >
      sh -c "
        corepack enable &&
        pnpm install --frozen-lockfile &&
        pnpm migrate
      "
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    restart: "no"

  # Hono 应用
  app:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
        PORT: 9999
    container_name: hono-app
    ports:
      - "9999:9999"
    image: hono-template
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      # 数据库连接（直连 PostgreSQL）
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/postgres}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - LOG_LEVEL=${LOG_LEVEL}
      - CLIENT_JWT_SECRET=${CLIENT_JWT_SECRET}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
    depends_on:
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  app_network:
    driver: bridge
