apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hono-app-ingress
  namespace: hono-template
  annotations:
    # k3s 默认使用 Traefik 作为 Ingress Controller
    kubernetes.io/ingress.class: traefik
    # 启用 HTTPS 重定向
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    # 设置超时
    traefik.ingress.kubernetes.io/timeout: 60s
    # 启用 CORS (如果需要)
    traefik.ingress.kubernetes.io/cors.enable: "true"
    traefik.ingress.kubernetes.io/cors.allowOrigins: "*"
    traefik.ingress.kubernetes.io/cors.allowMethods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
    traefik.ingress.kubernetes.io/cors.allowHeaders: "Content-Type,Authorization,X-Requested-With"
    # 启用访问日志
    traefik.ingress.kubernetes.io/access-log: "true"
    # 健康检查
    traefik.ingress.kubernetes.io/health-check-path: /health
    traefik.ingress.kubernetes.io/health-check-interval: 10s
spec:
  rules:
    - host: hono-template.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hono-app-service
                port:
                  number: 80
  # 如果有 TLS 证书，可以配置 HTTPS
  # tls:
  # - hosts:
  #   - hono-template.local
  #   secretName: hono-tls-secret
---
# 可选：为开发环境创建 NodePort 服务，便于直接访问
apiVersion: v1
kind: Service
metadata:
  name: hono-app-nodeport
  namespace: hono-template
  labels:
    app: hono-app
    service: nodeport
spec:
  type: NodePort
  selector:
    app: hono-app
  ports:
    - port: 80
      targetPort: 9999
      nodePort: 30999 # 可通过 node-ip:30999 访问
      protocol: TCP
      name: http
