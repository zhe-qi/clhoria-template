/* eslint-disable unicorn/filename-case */
/* eslint-disable no-console */

import { v7 as uuidV7 } from "uuid";

import db from "@/db";
import { sysMenu } from "@/db/schema";

export async function initSysMenu() {
  // 预定义一些固定的UUID用于父级菜单
  const manageMenuId = "01234567-1234-7890-abcd-000000000001";
  const logMenuId = "01234567-1234-7890-abcd-000000000002";

  const data = [
    // 常量菜单
    {
      menuType: "menu" as const,
      menuName: "login",
      iconType: 1,
      icon: null,
      routeName: "login",
      routePath: "/login/:module(pwd-login|code-login|register|reset-pwd|bind-wechat)?",
      component: "layout.blank$view.login",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: true,
      pid: null,
      order: 0,
      i18nKey: "route.login",
      keepAlive: false,
      constant: true,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    {
      menuType: "menu" as const,
      menuName: "403",
      iconType: 1,
      icon: null,
      routeName: "403",
      routePath: "/403",
      component: "layout.blank$view.403",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: true,
      pid: null,
      order: 0,
      i18nKey: "route.403",
      keepAlive: false,
      constant: true,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    {
      menuType: "menu" as const,
      menuName: "404",
      iconType: 1,
      icon: null,
      routeName: "404",
      routePath: "/404",
      component: "layout.blank$view.404",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: true,
      pid: null,
      order: 0,
      i18nKey: "route.404",
      keepAlive: false,
      constant: true,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    {
      menuType: "menu" as const,
      menuName: "500",
      iconType: 1,
      icon: null,
      routeName: "500",
      routePath: "/500",
      component: "layout.blank$view.500",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: true,
      pid: null,
      order: 0,
      i18nKey: "route.500",
      keepAlive: false,
      constant: true,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    {
      menuType: "menu" as const,
      menuName: "iframe-page",
      iconType: 1,
      icon: null,
      routeName: "iframe-page",
      routePath: "/iframe-page/:url",
      component: "layout.base$view.iframe-page",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: true,
      pid: null,
      order: 0,
      i18nKey: "route.iframe-page",
      keepAlive: false,
      constant: true,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    // 业务菜单
    {
      menuType: "menu" as const,
      menuName: "home",
      iconType: 1,
      icon: "mdi:monitor-dashboard",
      routeName: "home",
      routePath: "/home",
      component: "layout.base$view.home",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: false,
      pid: null,
      order: 0,
      i18nKey: "route.home",
      keepAlive: false,
      constant: false,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    // 系统管理目录
    {
      id: manageMenuId,
      menuType: "directory" as const,
      menuName: "manage",
      iconType: 1,
      icon: "carbon:cloud-service-management",
      routeName: "manage",
      routePath: "/manage",
      component: "layout.base",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: false,
      pid: null,
      order: 4,
      i18nKey: "route.manage",
      keepAlive: false,
      constant: false,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    // 日志管理目录
    {
      id: logMenuId,
      menuType: "directory" as const,
      menuName: "log",
      iconType: 1,
      icon: "carbon:login",
      routeName: "log",
      routePath: "/log",
      component: "layout.base",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: false,
      pid: null,
      order: 2,
      i18nKey: "route.log",
      keepAlive: false,
      constant: false,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    // 日志管理子菜单
    {
      menuType: "menu" as const,
      menuName: "log_login",
      iconType: 1,
      icon: "carbon:login",
      routeName: "log_login",
      routePath: "/log/login",
      component: "view.log_login",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: false,
      pid: logMenuId,
      order: 0,
      i18nKey: "route.log_login",
      keepAlive: false,
      constant: false,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    {
      menuType: "menu" as const,
      menuName: "log_operation",
      iconType: 1,
      icon: "carbon:login",
      routeName: "log_operation",
      routePath: "/log/operation",
      component: "view.log_operation",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: false,
      pid: logMenuId,
      order: 1,
      i18nKey: "route.log_operation",
      keepAlive: false,
      constant: false,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    // 系统管理子菜单
    {
      menuType: "menu" as const,
      menuName: "manage_user",
      iconType: 1,
      icon: "ic:round-manage-accounts",
      routeName: "manage_user",
      routePath: "/manage/user",
      component: "view.manage_user",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: false,
      pid: manageMenuId,
      order: 0,
      i18nKey: "route.manage_user",
      keepAlive: false,
      constant: false,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    {
      menuType: "menu" as const,
      menuName: "manage_role",
      iconType: 1,
      icon: "carbon:user-role",
      routeName: "manage_role",
      routePath: "/manage/role",
      component: "view.manage_role",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: false,
      pid: manageMenuId,
      order: 1,
      i18nKey: "route.manage_role",
      keepAlive: false,
      constant: false,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    {
      menuType: "menu" as const,
      menuName: "manage_menu",
      iconType: 1,
      icon: "material-symbols:route",
      routeName: "manage_menu",
      routePath: "/manage/menu",
      component: "view.manage_menu",
      pathParam: null,
      status: 1,
      activeMenu: null,
      hideInMenu: false,
      pid: manageMenuId,
      order: 2,
      i18nKey: "route.manage_menu",
      keepAlive: true,
      constant: false,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
    {
      menuType: "menu" as const,
      menuName: "manage_user-detail",
      iconType: 1,
      icon: null,
      routeName: "manage_user-detail",
      routePath: "/manage/user-detail/:id",
      component: "view.manage_user-detail",
      pathParam: null,
      status: 1,
      activeMenu: "manage_user",
      hideInMenu: true,
      pid: manageMenuId,
      order: 3,
      i18nKey: "route.manage_user-detail",
      keepAlive: false,
      constant: false,
      href: null,
      multiTab: false,
      createdBy: "-1",
      updatedBy: null,
    },
  ];

  // 为没有预定义ID的记录生成UUID
  const menuData = data.map(item => ({
    ...item,
    id: item.id || uuidV7(), // 如果没有预定义ID，则生成新的UUID
  }));

  await db.insert(sysMenu).values(menuData).onConflictDoNothing();
  console.log("系统菜单初始化完成");
}
